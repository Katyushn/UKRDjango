# Generated by Django 4.0.3 on 2022-07-17 21:12

import ckeditor_uploader.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('builder', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Filter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250, verbose_name='Название')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Обнавлено')),
            ],
            options={
                'verbose_name': 'Фильтр',
                'verbose_name_plural': 'Фильтры',
                'ordering': ['parent'],
            },
        ),
        migrations.CreateModel(
            name='FilterName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250, verbose_name='Название')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Обнавлено')),
            ],
            options={
                'verbose_name': 'Название фильтра',
                'verbose_name_plural': 'Названия фильтров',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Term',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delivery', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True, verbose_name='Условия доставки')),
                ('payment', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True, verbose_name='Условия оплаты')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Обнавлено')),
            ],
            options={
                'verbose_name': 'Условия',
                'verbose_name_plural': 'Условия',
                'ordering': ['pk'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250, verbose_name='Название')),
                ('slug', models.SlugField(max_length=250, unique=True, verbose_name='Ссылка')),
                ('description', models.CharField(max_length=250, verbose_name='Описание')),
                ('code', models.CharField(max_length=250, verbose_name='Код товара')),
                ('available', models.BooleanField(default=True, verbose_name='Наличие твоара')),
                ('intro', models.TextField(blank=True, null=True, verbose_name='Вступительный текст')),
                ('param_name_1', models.SlugField(blank=True, max_length=250, null=True, unique=True, verbose_name='Название параметра №1')),
                ('param_name_2', models.SlugField(blank=True, max_length=250, null=True, unique=True, verbose_name='Название параметра №1')),
                ('param_name_3', models.SlugField(blank=True, max_length=250, null=True, unique=True, verbose_name='Название параметра №1')),
                ('param_name_4', models.SlugField(blank=True, max_length=250, null=True, unique=True, verbose_name='Название параметра №1')),
                ('param_name_5', models.SlugField(blank=True, max_length=250, null=True, unique=True, verbose_name='Название параметра №1')),
                ('param_text_1', models.TextField(blank=True, null=True, verbose_name='Текст параметра №1')),
                ('param_text_2', models.TextField(blank=True, null=True, verbose_name='Текст параметра №2')),
                ('param_text_3', models.TextField(blank=True, null=True, verbose_name='Текст параметра №3')),
                ('param_text_4', models.TextField(blank=True, null=True, verbose_name='Текст параметра №4')),
                ('param_text_5', models.TextField(blank=True, null=True, verbose_name='Текст параметра №5')),
                ('img1', models.ImageField(blank=True, upload_to='product/%Y/%m/', verbose_name='Картинка')),
                ('img2', models.ImageField(blank=True, upload_to='product/%Y/%m/', verbose_name='Картинка')),
                ('img3', models.ImageField(blank=True, upload_to='product/%Y/%m/', verbose_name='Картинка')),
                ('img4', models.ImageField(blank=True, upload_to='product/%Y/%m/', verbose_name='Картинка')),
                ('img5', models.ImageField(blank=True, upload_to='product/%Y/%m/', verbose_name='Картинка')),
                ('video1', models.CharField(blank=True, max_length=250, null=True, unique=True, verbose_name='Видео')),
                ('video2', models.CharField(blank=True, max_length=250, null=True, unique=True, verbose_name='Видео')),
                ('video3', models.CharField(blank=True, max_length=250, null=True, unique=True, verbose_name='Видео')),
                ('video4', models.CharField(blank=True, max_length=250, null=True, unique=True, verbose_name='Видео')),
                ('video5', models.CharField(blank=True, max_length=250, null=True, unique=True, verbose_name='Видео')),
                ('text1', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True, verbose_name='Текст')),
                ('text2', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True, verbose_name='Текст')),
                ('text3', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True, verbose_name='Текст')),
                ('text4', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True, verbose_name='Текст')),
                ('text5', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True, verbose_name='Текст')),
                ('status', models.CharField(choices=[('standard', 'Обычный товар'), ('top', 'TOP товар')], default='standard', max_length=250, verbose_name='Статус')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена')),
                ('stock', models.PositiveIntegerField(verbose_name='Остаток')),
                ('currency', models.CharField(choices=[('UAH', 'гривны'), ('USD', 'доллары'), ('EUR', 'евро')], default='UAH', max_length=250, verbose_name='Валюта')),
                ('quantity', models.IntegerField(blank=True, null=True, verbose_name='Колличество товара')),
                ('is_published', models.BooleanField(default=True, verbose_name='Опубликовано')),
                ('publish', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата публикации')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Обнавлено')),
                ('author', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='builder.category', verbose_name='Категория товара')),
                ('filter', models.ManyToManyField(blank=True, to='shop.filter', verbose_name='Фильтры')),
            ],
            options={
                'verbose_name': 'Товар',
                'verbose_name_plural': 'Товары',
                'ordering': ['-created'],
            },
        ),
        migrations.AddField(
            model_name='filter',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='shop.filtername', verbose_name='Категория фильтров'),
        ),
    ]
